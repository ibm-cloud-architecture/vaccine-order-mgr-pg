version: '3.1'
services:
  zookeeper:
    image: strimzi/kafka:latest-kafka-2.6.0
    container_name: zookeeper
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    networks:
      - app-tier
    environment:
      LOG_DIR: /tmp/logs
  kafka:
    image: strimzi/kafka:latest-kafka-2.6.0
    container_name: kafka
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - app-tier
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  postgresql:
    container_name: postgres
    hostname: postgres
    image:  docker.io/bitnami/postgresql:13.2.0-debian-10-r11
    networks:
      - app-tier
    environment:
      POSTGRESQL_USERNAME: postgres
      POSTGRESQL_PASSWORD: pgpwd
      POSTGRESQL_DATABASE: postgres
      BITNAMI_DEBUG: "false"
      ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "5432:5432"
    volumes:
      - ./data:/bitnami/postgresql
  pgadmin:
    image: dpage/pgadmin4
    hostname: pgadmin
    ports:
      - 8082:80
    networks:
      - app-tier
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@domain.com
      PGADMIN_DEFAULT_PASSWORD: alongpassw0rd 
  orderms:
    # image: maven
    image: ibmcase/vaccineorderms:0.0.2
    container_name: orderms
    build:
      context:
        ../
      dockerfile:
        ./src/main/docker/Dockerfile.jvm
    depends_on:
      - kafka
      - postgresql
    hostname: orderms
    networks:
      - app-tier
    links:
      - kafka
      - postgresql
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      QUARKUS_HIBERNATE_ORM_SQL_LOAD_SCRIPT: import.sql
      QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: drop-and-create
      SHIPMENT_PLAN_TOPIC: vaccine_shipment_plans
      QUARKUS_PROFILE: dev
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: pgpwd
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/postgres
    ports:
      - 8080:8080
      - 5005:5005
networks:
  app-tier:
    driver: bridge
