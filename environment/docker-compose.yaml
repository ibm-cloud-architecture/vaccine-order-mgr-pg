version: '3.1'
services:
  zookeeper:
    image: strimzi/kafka:latest-kafka-2.6.0
    container_name: zookeeper
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
  kafka:
    image: strimzi/kafka:latest-kafka-2.6.0
    container_name: kafka
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  postgresql:
    container_name: postgres
    hostname: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pgpwd
      POSTGRES_DB: ordersdb
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data/
  orderservice:
    image: ibmcase/vaccineorderms
    container_name: vaccineorderms
    build:
      context:
        ../../
      dockerfile:
        ./src/main/docker/Dockerfile.jvm
    ports:
      - 8081:8080
      - 5005:5005
    links:
      - postgresql
      - kafka
    depends_on:
      - postgresql
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SHIPMENT_PLAN_TOPIC: vaccine_shipment_plans
      QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: drop-and-create
      VUE_APP_TRANSPORTATION_URL: "http://vaccine-transport-simulator-vaccine.gse-eda-2020-10-3-0143c5dd31acd8e030a1d6e0ab1380e3-0000.us-east.containers.appdomain.cloud/transportation"
      VUE_APP_VERSION: 0.0.5
      VUE_APP_TITLE: "Vaccine Order Manager"