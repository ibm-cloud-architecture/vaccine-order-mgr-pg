# Configuration file
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=INFO

quarkus.swagger-ui.always-include=true
quarkus.http.port=8080

# When deploying as openshift app using s2i for example
quarkus.openshift.expose=true
quarkus.openshift.labels.app=vaccineorderms
quarkus.container-image.registry=image-registry.openshift-image-registry.svc:5000
quarkus.container-image.name=vaccineorderms
quarkus.container-image.group=vaccine

quarkus.openshift.env.configmaps=vaccine-order-ms-cm
quarkus.openshift.env.secrets=vaccine-order-secrets

# Kafka config
quarkus.kafka.health.enabled=false
%dev.kafka.bootstrap.servers=kafka:9092
# eda-dev-kafka-bootstrap.eventstreams.svc:9093
kafka.bootstrap.servers=eda-dev-kafka-bootstrap-eventstreams.gse-eda-2021-1-0143c5dd31acd8e030a1d6e0ab1380e3-0000.us-east.containers.appdomain.cloud:443

kafka.ssl.truststore.location=/deployments/certs/server/ca.p12
kafka.sasl.mechanism=SCRAM-SHA-512
kafka.ssl.truststore.type=PKCS12
kafka.security.protocol=SASL_SSL
kafka.ssl.protocol=TLSv1.2
kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username\=${KAFKA_USER} password\=${KAFKA_PASSWORD};
quarkus.openshift.env.mapping.KAFKA_SSL_TRUSTSTORE_PASSWORD.from-secret=eda-dev-cluster-ca-cert
quarkus.openshift.env.mapping.KAFKA_SSL_TRUSTSTORE_PASSWORD.with-key=ca.password
quarkus.openshift.mounts.es-cert.path=/deployments/certs/server
quarkus.openshift.secret-volumes.es-cert.secret-name=eda-dev-cluster-ca-cert

quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres1234
#quarkus.datasource.=ordersdb
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=import.sql
quarkus.datasource.jdbc=true
quarkus.datasource.health.enabled=false
quarkus.datasource.jdbc.url=jdbc:postgresql://postgres.vaccine.svc:5432/postgres
quarkus.datasource.jdbc.max-size=8

# Reactive config
#quarkus.datasource.reactive.url=vertx-reactive:postgresql://localhost/orderdb


# Control images


# Knative deployment - NOT USED until bug on mount will be fixed
# quarkus.knative.env-vars.KAFKA_USER.value=app-user
# quarkus.knative.env-vars.SECURE_PROTOCOL.value=SSL
# quarkus.kubernetes.deployment-target=knative
# quarkus.knative.scale-to-zero-enabled=true




# Outbox setting for Quarkus Debezium plugin
quarkus.debezium-outbox.id.name=id
quarkus.index-dependency.outbox.group-id=io.debezium
quarkus.index-dependency.outbox.artifact-id=debezium-quarkus-outbox
quarkus.debezium-outbox.table-name=orderevents
# change to true in prod
quarkus.debezium-outbox.remove-after-insert=false


# Reactive messaging to consume shipment plans
mp.messaging.incoming.shipments.connector=smallrye-kafka
mp.messaging.incoming.shipments.topic=${SHIPMENT_PLAN_TOPIC:vaccine_shipment_plans}
mp.messaging.incoming.shipments.group.id=order_mgr
mp.messaging.incoming.shipments.auto.offset.reset=earliest
mp.messaging.incoming.shipments.enable.auto.commit=false
mp.messaging.incoming.shipments.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.shipments.value.deserializer=ibm.gse.eda.vaccines.infrastructure.ShipmentDeserializer
